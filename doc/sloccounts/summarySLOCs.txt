================================================================================================
Software Training
================================================================================================
Creating filelist for algorithms
Creating filelist for bash
Creating filelist for basics
Creating filelist for dataStructures
Creating filelist for io
Creating filelist for kernel
Creating filelist for makefiles
Creating filelist for network
Creating filelist for patterns
Creating filelist for utilities
Categorizing files.
Finding a working MD5 command....
Found a working MD5 command.
Computing results.


SLOC	Directory	SLOC-by-Language (Sorted)
1897    algorithms      cpp=1777,sh=120
570     dataStructures  cpp=568,sh=2
500     utilities       cpp=498,sh=2
244     makefiles       sh=124,cpp=120
202     basics          sh=124,cpp=78
185     io              cpp=128,sh=57
130     patterns        sh=118,cpp=12
48      network         cpp=48
46      bash            sh=46
0       kernel          (none)


Totals grouped by language (dominant language first):
cpp:           3229 (84.48%)
sh:             593 (15.52%)




Total Physical Source Lines of Code (SLOC)                = 3,822
Development Effort Estimate, Person-Years (Person-Months) = 0.82 (9.81)
 (Basic COCOMO model, Person-Months = 2.4 * (KSLOC**1.05))
Schedule Estimate, Years (Months)                         = 0.50 (5.95)
 (Basic COCOMO model, Months = 2.5 * (person-months**0.38))
Estimated Average Number of Developers (Effort/Schedule)  = 1.65
Total Estimated Cost to Develop                           = $ 110,420
 (average salary = $56,286/year, overhead = 2.40).
SLOCCount, Copyright (C) 2001-2004 David A. Wheeler
SLOCCount is Open Source Software/Free Software, licensed under the GNU GPL.
SLOCCount comes with ABSOLUTELY NO WARRANTY, and you are welcome to
redistribute it under certain conditions as specified by the GNU GPL license;
see the documentation for details.
Please credit this data as "generated using David A. Wheeler's 'SLOCCount'."
================================================================================================
CodeWeb
================================================================================================
Creating filelist for BaseWidgets
Creating filelist for CodeGenerator
Have a non-directory at the top, so creating directory top_dir
Adding /home/dapper/code/CodeWeb/CodeWeb.pro to top_dir
Adding /home/dapper/code/CodeWeb/CodeWeb.pro.user to top_dir
Adding /home/dapper/code/CodeWeb/CodeWeb.pro.user.4.9-pre1 to top_dir
Creating filelist for Common
Adding /home/dapper/code/CodeWeb/LICENSE to top_dir
Creating filelist for TestCaseGenerator
Creating filelist for Utils
Creating filelist for Widgets
Adding /home/dapper/code/CodeWeb/codeWebApp.h to top_dir
Adding /home/dapper/code/CodeWeb/codewebapp.cpp to top_dir
Adding /home/dapper/code/CodeWeb/cppCodeTemplate.txt to top_dir
Adding /home/dapper/code/CodeWeb/cppCodeTemplateConstructor.txt to top_dir
Adding /home/dapper/code/CodeWeb/cppCodeTemplateConstructor.xml to top_dir
Adding /home/dapper/code/CodeWeb/cppCodeTemplateDoWhileLoop.txt to top_dir
Adding /home/dapper/code/CodeWeb/cppCodeTemplateElseIf.txt to top_dir
Adding /home/dapper/code/CodeWeb/cppCodeTemplateForLoop.txt to top_dir
Adding /home/dapper/code/CodeWeb/cppCodeTemplateFunction.txt to top_dir
Adding /home/dapper/code/CodeWeb/cppCodeTemplateIf.txt to top_dir
Adding /home/dapper/code/CodeWeb/cppCodeTemplateSwitch.txt to top_dir
Adding /home/dapper/code/CodeWeb/cppCodeTemplateWhileLoop.txt to top_dir
Adding /home/dapper/code/CodeWeb/cppText.ent to top_dir
Adding /home/dapper/code/CodeWeb/main.cpp to top_dir
Adding /home/dapper/code/CodeWeb/mainwindow.ui to top_dir
Adding /home/dapper/code/CodeWeb/rCodeTemplateElse.txt to top_dir
Adding /home/dapper/code/CodeWeb/rCodeTemplateElseIf.txt to top_dir
Adding /home/dapper/code/CodeWeb/rCodeTemplateForLoop.txt to top_dir
Adding /home/dapper/code/CodeWeb/rCodeTemplateFunction.txt to top_dir
Adding /home/dapper/code/CodeWeb/rCodeTemplateIf.txt to top_dir
Categorizing files.
Finding a working MD5 command....
Found a working MD5 command.
Computing results.


SLOC	Directory	SLOC-by-Language (Sorted)
2781    Widgets         cpp=2781
662     TestCaseGenerator cpp=662
408     CodeGenerator   cpp=408
265     Utils           cpp=265
260     top_dir         cpp=242,xml=18
195     Common          cpp=195
24      BaseWidgets     cpp=24


Totals grouped by language (dominant language first):
cpp:           4577 (99.61%)
xml:             18 (0.39%)



================================================================================================
TinyVils
================================================================================================
Total Physical Source Lines of Code (SLOC)                = 4,595
Development Effort Estimate, Person-Years (Person-Months) = 0.99 (11.90)
 (Basic COCOMO model, Person-Months = 2.4 * (KSLOC**1.05))
Schedule Estimate, Years (Months)                         = 0.53 (6.41)
 (Basic COCOMO model, Months = 2.5 * (person-months**0.38))
Estimated Average Number of Developers (Effort/Schedule)  = 1.86
Total Estimated Cost to Develop                           = $ 133,980
 (average salary = $56,286/year, overhead = 2.40).
SLOCCount, Copyright (C) 2001-2004 David A. Wheeler
SLOCCount is Open Source Software/Free Software, licensed under the GNU GPL.
SLOCCount comes with ABSOLUTELY NO WARRANTY, and you are welcome to
redistribute it under certain conditions as specified by the GNU GPL license;
see the documentation for details.
Please credit this data as "generated using David A. Wheeler's 'SLOCCount'."


Creating filelist for Assets
Creating filelist for Licenses
Creating filelist for Packages
Creating filelist for ProjectSettings
Have a non-directory at the top, so creating directory top_dir
Adding /home/dapper/code/TinyVils/./README.md to top_dir
Categorizing files.
Finding a working MD5 command....
Found a working MD5 command.
Computing results.


SLOC	Directory	SLOC-by-Language (Sorted)
1302    Assets          cs=1302
0       Licenses        (none)
0       Packages        (none)
0       ProjectSettings (none)
0       top_dir         (none)


Totals grouped by language (dominant language first):
cs:            1302 (100.00%)



================================================================================================
BoardGame
================================================================================================
Total Physical Source Lines of Code (SLOC)                = 1,302
Development Effort Estimate, Person-Years (Person-Months) = 0.26 (3.17)
 (Basic COCOMO model, Person-Months = 2.4 * (KSLOC**1.05))
Schedule Estimate, Years (Months)                         = 0.32 (3.87)
 (Basic COCOMO model, Months = 2.5 * (person-months**0.38))
Estimated Average Number of Developers (Effort/Schedule)  = 0.82
Total Estimated Cost to Develop                           = $ 35,644
 (average salary = $56,286/year, overhead = 2.40).
SLOCCount, Copyright (C) 2001-2004 David A. Wheeler
SLOCCount is Open Source Software/Free Software, licensed under the GNU GPL.
SLOCCount comes with ABSOLUTELY NO WARRANTY, and you are welcome to
redistribute it under certain conditions as specified by the GNU GPL license;
see the documentation for details.
Please credit this data as "generated using David A. Wheeler's 'SLOCCount'."


Creating filelist for BoardGame
Categorizing files.
Finding a working MD5 command....
Found a working MD5 command.
Computing results.


SLOC	Directory	SLOC-by-Language (Sorted)
2581    BoardGame       cpp=2140,sh=308,perl=99,cs=34


Totals grouped by language (dominant language first):
cpp:           2140 (82.91%)
sh:             308 (11.93%)
perl:            99 (3.84%)
cs:              34 (1.32%)




Total Physical Source Lines of Code (SLOC)                = 2,581
Development Effort Estimate, Person-Years (Person-Months) = 0.54 (6.50)
 (Basic COCOMO model, Person-Months = 2.4 * (KSLOC**1.05))
Schedule Estimate, Years (Months)                         = 0.42 (5.09)
 (Basic COCOMO model, Months = 2.5 * (person-months**0.38))
Estimated Average Number of Developers (Effort/Schedule)  = 1.28
Total Estimated Cost to Develop                           = $ 73,117
 (average salary = $56,286/year, overhead = 2.40).
SLOCCount, Copyright (C) 2001-2004 David A. Wheeler
SLOCCount is Open Source Software/Free Software, licensed under the GNU GPL.
SLOCCount comes with ABSOLUTELY NO WARRANTY, and you are welcome to
redistribute it under certain conditions as specified by the GNU GPL license;
see the documentation for details.
Please credit this data as "generated using David A. Wheeler's 'SLOCCount'."

================================================================================================
WorkoutTracker
================================================================================================
Creating filelist for WorkoutTracker
Categorizing files.
Finding a working MD5 command....
Found a working MD5 command.
Computing results.


SLOC	Directory	SLOC-by-Language (Sorted)
1868    WorkoutTracker  cpp=1461,sh=308,perl=99


Totals grouped by language (dominant language first):
cpp:           1461 (78.21%)
sh:             308 (16.49%)
perl:            99 (5.30%)




Total Physical Source Lines of Code (SLOC)                = 1,868
Development Effort Estimate, Person-Years (Person-Months) = 0.39 (4.63)
 (Basic COCOMO model, Person-Months = 2.4 * (KSLOC**1.05))
Schedule Estimate, Years (Months)                         = 0.37 (4.47)
 (Basic COCOMO model, Months = 2.5 * (person-months**0.38))
Estimated Average Number of Developers (Effort/Schedule)  = 1.03
Total Estimated Cost to Develop                           = $ 52,070
 (average salary = $56,286/year, overhead = 2.40).
SLOCCount, Copyright (C) 2001-2004 David A. Wheeler
SLOCCount is Open Source Software/Free Software, licensed under the GNU GPL.
SLOCCount comes with ABSOLUTELY NO WARRANTY, and you are welcome to
redistribute it under certain conditions as specified by the GNU GPL license;
see the documentation for details.
Please credit this data as "generated using David A. Wheeler's 'SLOCCount'."

================================================================================================
PythonTools
================================================================================================
Have a non-directory at the top, so creating directory top_dir
Adding /home/dapper/code/PythonTools/./README.md to top_dir
Creating filelist for jsonUtil
Creating filelist for requirementsManager
Creating filelist for testCaseGenerator
Creating filelist for utilities
Categorizing files.
Finding a working MD5 command....
Found a working MD5 command.
Computing results.


SLOC	Directory	SLOC-by-Language (Sorted)
181     requirementsManager python=181
156     testCaseGenerator python=156
2       jsonUtil        python=2
0       top_dir         (none)
0       utilities       (none)


Totals grouped by language (dominant language first):
python:         339 (100.00%)




Total Physical Source Lines of Code (SLOC)                = 339
Development Effort Estimate, Person-Years (Person-Months) = 0.06 (0.77)
 (Basic COCOMO model, Person-Months = 2.4 * (KSLOC**1.05))
Schedule Estimate, Years (Months)                         = 0.19 (2.26)
 (Basic COCOMO model, Months = 2.5 * (person-months**0.38))
Estimated Average Number of Developers (Effort/Schedule)  = 0.34
Total Estimated Cost to Develop                           = $ 8,677
 (average salary = $56,286/year, overhead = 2.40).
SLOCCount, Copyright (C) 2001-2004 David A. Wheeler
SLOCCount is Open Source Software/Free Software, licensed under the GNU GPL.
SLOCCount comes with ABSOLUTELY NO WARRANTY, and you are welcome to
redistribute it under certain conditions as specified by the GNU GPL license;
see the documentation for details.
Please credit this data as "generated using David A. Wheeler's 'SLOCCount'."
