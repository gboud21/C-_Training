I. Links/Resources
    A. https://cs.uwaterloo.ca/~m2nagapp/courses/CS446/1195/Arch_Design_Activity/ClientServer.pdf
II. Definition
    A. Computing model in which the server hosts, delivers and manages most of the resources and services
       to be consumer by the client. This type of architecture has one or more client computers connected
       to a central server over a network or internet connection.
    B. It is also known as a networking computing model because all the requests and services are delivered 
       over a network
        i.   Client
            a. A piece of software/application that takes the input and sends requests to the servers
        ii.  Server
            a. A piece of software that receives and processes requests from clients
        iii. Load balancer
            a. Responsible for distributing incoming network traffic across a group of backend server to
               optimize resource usage
        iv.  Network layer protocols
            a. TCP/UDP
III. Topological constraints
    A. In this architecture, you can imagine multiple computers sending data out on the net to a single Load
       Balancer which is responsible for distributing that information to servers which will handle/process the
       request/data sent out by the client and interact with some server-side databases

       Laptop ----                           -------- Server ------- Databsase -------- Backup Database
                  |                          |
                  |                          |
                  |                          |
                  ----------> Load Balancer --------- Server ------- Databsase -------- Backup Database
                  |                          |
                  |                          |
                  |                          |
       Laptop ----                           -------- Server ------- Databsase -------- Backup Database

    B. The flow of data is unidirectional and forms a cycle. Typically it is initiated by a client requesting data from the
       service. Clients cannot talk to each other directly
    C. Data Flow cycle
        i.   Client requests data from a server
        ii.  Load balancer routes the request to the appropriate server
        iii. Server processes client request
        iv.  Server queries appropriate data base for some data
        v.   Database returns the queried data back to the server
        vi.  The server processes the data and sends the data back to the client
        vii. Repeat process

IV. Applicable Problems
    A. Most useful for applications that require a separation of concerns between the client and the server. Meant for systems with
       high interoperability. Improves scalability
    B. Most applicable for systems that require a separation of functionality. Request validation and input could be handled from 
       the client side while the load balancer routes the request to the server for adequate processing. Server is responsible for
       processing the client's request and returning via the right protocol
V. Resialnce to change
    A. Extreamly flexible and adaptable to the user and problem set
    B. Can be combined with other architecture types on the client or server sides
    C. As requirements change, modules can be updated without altering the client-server architecture or disrupting service
    D. Since the data is being passed between the client and server, the services provided by the server are entirely up to the developers
       and there is an infinite number of ways to use this architecture to solve problems
VI. Negative behaviors
    A. Higher risk of failure due to centralized control
    B. High vulnerability to Denial of Service attacks because the number of servers is considerably smaller than the number of clients
    C. Very expensive to install and manage the network
        i. Server machines are typically much more expensive and employees are expensive
   D. Cannot be used for programs that requires steps that cannot be executed independently/concurrently (aks highly coupled)
VII. Comparisons with other architecture
   A. Client-server can be though of as a variation of layered architecture with two layers
   B. Pipe and filter only allows uniderectional flow of information wheras client-server and layered architecture allow bidirectional
      flow