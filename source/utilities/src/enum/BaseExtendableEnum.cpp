#include "BaseExtendableEnum.h"

//////////////////////////////////////////////////////////////////
/// BaseExtendableEnum::BaseExtendableEnum()
//////////////////////////////////////////////////////////////////
BaseExtendableEnum::BaseExtendableEnum() {}

//////////////////////////////////////////////////////////////////
/// BaseExtendableEnum::~BaseExtendableEnum()
//////////////////////////////////////////////////////////////////
BaseExtendableEnum::~BaseExtendableEnum() {}

//////////////////////////////////////////////////////////////////
/// BaseExtendableEnum::addEnumerationLiteral()
//////////////////////////////////////////////////////////////////
bool BaseExtendableEnum::addExtendableLiteral(
    const ExtendableEnumLiteral& literal)
{
    return m_enumerationMap
        .insert(std::pair<ExtendableEnumLiteral, bool>(literal, true))
        .second;
}

//////////////////////////////////////////////////////////////////
/// BaseExtendableEnum::isValid()
//////////////////////////////////////////////////////////////////
bool BaseExtendableEnum::isExtendableValid(
    const ExtendableEnumLiteral& literal) const
{
    return m_enumerationMap.find(literal) != m_enumerationMap.end();
}
